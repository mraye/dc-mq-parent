<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.vspro.stock.persist.orm.dao.StockDao">

    <resultMap id="baseResultMap" type="com.github.vspro.stock.persist.orm.domain.StockDo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="product_id" property="productId" jdbcType="BIGINT"/>
        <result column="stock" property="stock" jdbcType="INTEGER"/>
        <result column="deleted" property="deleted" jdbcType="CHAR"/>
        <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="baseColumns">
        id,
        product_id,
        stock,
        deleted,
        gmt_created,
        gmt_modified
    </sql>

    <sql id="insertColumnsVal">
        #{id},
        #{productId},
        #{stock},
        #{deleted},
        #{gmtCreated},
        #{gmtModified}
    </sql>

    <sql id="selectiveInsertColumnsVal">
        <if test="id != null">
            id = #{id},
        </if>
        <if test="productId != null">
            product_id = #{productId},
        </if>
        <if test="stock != null">
            stock = #{stock},
        </if>
        <if test="deleted != null">
            deleted = #{deleted},
        </if>
        <if test="gmtCreated != null">
            gmt_created = #{gmtCreated},
        </if>
        <if test="gmtModified != null">
            gmt_modified = #{gmtModified},
        </if>
    </sql>

    <sql id="updateColumns">
        <set>
            <if test="id != null ">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="productId != null ">
                product_id = #{productId,jdbcType=BIGINT},
            </if>
            <if test="stock != null ">
                stock = #{stock,jdbcType=INTEGER},
            </if>
            <if test="deleted != null ">
                deleted = #{deleted,jdbcType=CHAR},
            </if>
            <if test="gmtCreated != null ">
                gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null ">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
    </sql>


    <sql id="enableLogicalDelCondition">
        and deleted= 2  
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.github.vspro.stock.persist.orm.domain.StockDo">
        insert into t_stock
        (
        <include refid="baseColumns"/>
        )
        values
        (
        <include refid="insertColumnsVal"/>
        )
    </insert>


    <insert id="insertOrUpdate" parameterType="com.github.vspro.stock.persist.orm.domain.StockDo">
        insert into t_stock
        (
        <include refid="baseColumns"/>
        )
        values
        (
        <include refid="insertColumnsVal"/>
        )
        ON DUPLICATE KEY UPDATE
        <trim suffixOverrides=",">
            <include refid="selectiveInsertColumnsVal"/>
        </trim>
    </insert>


    <select id="selectByPrimaryKey" resultMap="baseResultMap" parameterType="map">
        select
        <include refid="baseColumns"/>
        from t_stock
        <where>
            <trim suffixOverrides="and">
                and id = #{id,jdbcType=BIGINT}
                <include refid="enableLogicalDelCondition"/>
            </trim>
        </where>
    </select>

    <select id="selectOneSelective" resultMap="baseResultMap" parameterType="com.github.vspro.stock.persist.orm.domain.StockDo">
        select
        <include refid="baseColumns"/>
        from t_stock
        <where>
            <trim suffixOverrides="and">
                <if test="id != null ">
                    and id = #{id,jdbcType=BIGINT}
                </if>
                <if test="productId != null ">
                    and product_id = #{productId,jdbcType=BIGINT}
                </if>
                <if test="stock != null ">
                    and stock = #{stock,jdbcType=INTEGER}
                </if>
                <if test="deleted != null ">
                    and deleted = #{deleted,jdbcType=CHAR}
                </if>
                <if test="gmtCreated != null ">
                    and gmt_created = #{gmtCreated,jdbcType=TIMESTAMP}
                </if>
                <if test="gmtModified != null ">
                    and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
                </if>
            </trim>
            limit 1
        </where>
    </select>

    <update id="updateByPrimaryKeySelective" parameterType="com.github.vspro.stock.persist.orm.domain.StockDo">
        update t_stock
        <set>
            <if test="productId != null ">
                product_id = #{productId,jdbcType=BIGINT},
            </if>
            <if test="stock != null ">
                stock = #{stock,jdbcType=INTEGER},
            </if>
            <if test="deleted != null ">
                deleted = #{deleted,jdbcType=CHAR},
            </if>
            <if test="gmtCreated != null ">
                gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null ">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        <where>
            <trim suffixOverrides="and">
                and id = #{id,jdbcType=BIGINT}
                <include refid="enableLogicalDelCondition"/>
            </trim>
        </where>
    </update>


    <update id="updateByPrimaryKey" parameterType="com.github.vspro.stock.persist.orm.domain.StockDo">
        update t_stock
        <set>
            product_id = #{productId,jdbcType=BIGINT},
            stock = #{stock,jdbcType=INTEGER},
            deleted = #{deleted,jdbcType=CHAR},
            gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
            gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
        </set>
        <where>
            <trim suffixOverrides="and">
                and id = #{id,jdbcType=BIGINT}
                <include refid="enableLogicalDelCondition"/>
            </trim>
        </where>
    </update>

    <delete id="deleteByPrimaryKey" parameterType="map">
        delete from t_stock
        <where>
            <trim suffixOverrides="and">
                and id = #{id,jdbcType=BIGINT}
                <include refid="enableLogicalDelCondition"/>
            </trim>
        </where>
    </delete>

    <update id="deleteLogicalByPrimaryKey" parameterType="map">
        update t_stock
        set deleted=1
        <where>
            <trim suffixOverrides="and">
                and id = #{id,jdbcType=BIGINT}
                <include refid="enableLogicalDelCondition"/>
            </trim>
        </where>
    </update>

    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="id">
        insert into t_stock
        (
        <include refid="baseColumns"/>
        ) values
        <foreach collection="list" item="obj" separator=",">
            (
            #{obj.id},
            #{obj.productId},
            #{obj.stock},
            #{obj.deleted},
            #{obj.gmtCreated},
            #{obj.gmtModified}
            )
        </foreach>
    </insert>

</mapper>
